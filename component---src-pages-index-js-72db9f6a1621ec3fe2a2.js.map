{"version":3,"sources":["webpack:///./src/components/project.js","webpack:///./src/components/work.js","webpack:///./src/components/circleImage.js","webpack:///./src/components/landing.js","webpack:///./src/pages/index.js"],"names":["ProjectVideo","props","icon","query","render","video","class","id","style","position","zIndex","width","autoPlay","loop","muted","src","node","publicURL","renderVideo","videos","edges","find","relativePath","Project","height","title","desc","tags","map","tag","substring","links","link","url","Work","data","projects","allProjectsJson","forEach","project","push","description","CircleImage","className","file","skills","SkillCategory","state","active","handleClick","e","el","target","nextElementSibling","this","classList","remove","setState","onClick","elements","React","Component","Landing","Object","keys","skill","to","IndexPage","componentDidMount","window","location","hash","document","querySelector","scrollIntoView","load"],"mappings":"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","file":"component---src-pages-index-js-72db9f6a1621ec3fe2a2.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport RedirectButton from \"./redirectButton\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst renderVideo = (video) => { \n    return (  \n        <>\n            <video class=\"center\" id=\"project-vid\" style={{position: 'relative', zIndex: '50' }} width=\"281\"  autoPlay loop muted> \n                <source src={video.node.publicURL} />\n            </video> \n            <script> document.getElementById('project-vid').play() </script>\n        </> \n    )\n}\n\n// query video icon for project\nconst ProjectVideo = function(props) {\n    const {icon} = props;\n    return <StaticQuery \n        query = {graphql`\n            query { \n                videos: allFile(filter: { extension: {eq: \"mp4\"} }) {\n                    edges { \n                        node { \n                            publicURL\n                            relativePath\n                        }\n                    }\n                }           \n            }\n        `}\n        render = { ({videos}) => renderVideo(videos.edges.find(video => video.node.relativePath === icon)) }\n    />\n}\n\nconst Project = (props) =>  {\n    return (\n        <div class=\"project-container\">\n            <div class=\"circle project-icon\" style={{width: '240px', height: '240px'}}>\n                {props.icon ? <ProjectVideo icon={props.icon}/> : <></>}\n            </div>\n                <div class=\"project-info\">\n                <h1>{props.title}</h1>\n                <div class=\"project-content\">\n                    <p class=\"mm-text-box\">{props.desc} </p>\n                    <ul class=\"tags\"> \n                        {props.tags.map( (tag) => <li><span class={tag.substring(0,5)+\"-tag tag\"}> </span>{tag}</li> )}\n                    </ul>\n                    <div class=\"button-container\"> {props.links.map( (link) => (<RedirectButton url={link[1]}>{link[0]}</RedirectButton>) )}</div>\n                </div>\n            </div> \n        </div>\n    );\n}; \n\nProject.propTypes = {\n    children: PropTypes.node.isRequired,\n}\n\nexport default Project;","import React from \"react\"\nimport Project from \"./project\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Work = () => (\n     <StaticQuery\n        query = {graphql`\n            query { \n                allProjectsJson { \n                    edges { \n                        node { \n                            title\n                            description\n                            links \n                            tags\n                            icon\n                        }\n                    }\n                }\n            }\n        `}\n\n        render = {data =>{ \n            var projects = [];\n            data.allProjectsJson.edges.forEach( (project) => { \n                projects.push( \n                    <Project title={project.node.title} icon={project.node.icon} desc={project.node.description} tags={project.node.tags} links={project.node.links}>\n                    </Project>\n                );\n            })\n              \n            return ( projects );\n        }}\n\n    /> \n)\n\n\nexport default Work;","import React from \"react\"\n\nimport ImageTwo from \"./img\"\n\n\nconst CircleImage = (props) => (  \n   <div className=\"circle center\"> \n      <ImageTwo file={props.src}/> \n   </div>\n)\n\nexport default CircleImage;","import React from \"react\"\nimport Scroll from \"./scroll\"\nimport CircleImage from \"./circleImage\"\n\n\nconst skills = { \n    \"Web Dev\": [\"html5\", \"css3\", \"js\", \"react.js\", \"redux.js\"],\n    \"Creative Dev\": [\"webGL\", \"three.js\"],\n    \"Design\": [\"figma\", \"photoshop\", \"indesign\", \"prototyping\", \"illustration\"]\n}\n  \nclass SkillCategory extends React.Component { \n    constructor(props) { \n        super(props);\n        this.state = { \n            active: false\n        }\n    }\n\n    handleClick(e) { \n        let el = e.target.nextElementSibling;\n        !this.state.active ? el.className += \" open\" : el.classList.remove(\"open\");\n        this.setState( (state) => ( {active: !state.active} ));\n    }\n\n    render() { \n        return (\n            <>\n                <h2 class=\"category\" onClick={e => this.handleClick(e)}> {this.props.title} </h2>\n                <div className=\"skill-elements\"> \n                <ul>{this.props.elements.map( el => <li> {el} </li> )}</ul>\n                </div> \n            </> \n        )\n    }\n }\n\nconst Landing = (props) => ( \n    <div>\n        <div className=\"content-container landing-container\"> \n            <h1 className=\"name-header\">ANGELA ZHANG</h1>\n            <hr/>\n            <section class=\"categories\"><span className=\"square\"> </span>  {Object.keys(skills).map( skill => <SkillCategory title={skill} elements={skills[skill]}></SkillCategory>)} </section>  \n        </div> \n        <CircleImage src={\"landing.jpg\"}/> \n        <Scroll className=\"scroll-button\" to={'#work'}>Scroll down</Scroll> \n    </div>\n)\n\n\n\nexport default Landing;","import React from \"react\"\n\nimport Work from \"../components/work\"\n\nimport Layout from \"../components/layout\"\nimport Landing from \"../components/landing\"\nimport SEO from \"../components/seo\"\n\nclass IndexPage extends React.Component { \n  componentDidMount() { \n    if (window.location.hash != null && window.location.hash != '') { \n      document.querySelector(window.location.hash).scrollIntoView();\n    }\n  }\n\n  render() { \n    return (\n      <Layout load>\n        <SEO title=\"Portfolio\" />\n        <Landing></Landing> \n        <div id=\"work\"> \n          <Work />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage;\n"],"sourceRoot":""}